name: Daily Commit, PR, and Issue

on:
  schedule:
    - cron: '0 0 * * *'  # once daily at 00:00 UTC
  workflow_dispatch:

jobs:
  auto-commit-pr-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Make a change to daily.txt
        run: |
          echo "Daily ping: $(date -u)" >> daily.txt

      - name: Commit changes on new branch (force push safe)
        id: commit_changes
        run: |
          # Unique branch name with date and time to avoid collisions
          BRANCH="daily-update-$(date +%Y-%m-%d-%H%M%S)"
          echo "branch_name=$BRANCH" >> $GITHUB_OUTPUT
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH"
          git add daily.txt
          git commit -m "ðŸ¤– Daily update on $(date -u)" || echo "Nothing to commit"
          git push origin "$BRANCH" --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create issue (via API)
        id: create_issue
        run: |
          ISSUE_NUMBER=$(gh api repos/marco13-moo/cron-actions/issues \
            -f title="Daily Issue $(date +%Y-%m-%d)" \
            -f body="Automatically created daily issue" \
            --jq '.number')
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create pull request linked to issue (via API)
        id: create_pr
        run: |
          BRANCH="${{ steps.commit_changes.outputs.branch_name }}"
          REPO="marco13-moo/cron-actions"

          # Give GitHub a moment to register the branch
          sleep 5

          # Check if a PR from this branch to main already exists
          PR_NUMBER=$(gh api repos/$REPO/pulls \
            --jq ".[] | select(.head.ref==\"$BRANCH\" and .base.ref==\"main\") | .number" || true)

          if [ -z "$PR_NUMBER" ]; then
            echo "No existing PR found. Creating a new one..."
            PR_NUMBER=$(gh api repos/$REPO/pulls \
              -f title="Daily PR $(date +%Y-%m-%d)" \
              -f body="Daily automated PR\n\nCloses #${{ steps.create_issue.outputs.issue_number }}" \
              -f head="$BRANCH" \
              -f base="main" \
              --jq '.number')
          else
            echo "PR already exists: #$PR_NUMBER"
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request instantly (with retry)
        run: |
          PR_NUM=${{ steps.create_pr.outputs.pr_number }}
          REPO="marco13-moo/cron-actions"

          for i in {1..5}; do
            echo "Attempt $i to merge PR #$PR_NUM"
            RESPONSE=$(gh api "repos/$REPO/pulls/$PR_NUM/merge" -f merge_method=merge 2>&1) && break || echo "$RESPONSE"
            sleep 5
          done

          if [[ "$RESPONSE" != *"\"merged\":true"* ]]; then
            echo "Failed to merge PR after retries"
            exit 1
          else
            echo "PR merged successfully"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch after merge
        run: |
          gh api \
            -X DELETE \
            "repos/marco13-moo/cron-actions/git/refs/heads/${{ steps.commit_changes.outputs.branch_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
